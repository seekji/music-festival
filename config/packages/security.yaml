security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_VIEWER:
          - ROLE_SONATA_ADMIN
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_LIST
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_VIEW
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_LIST
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_VIEW
          - ROLE_APP_ADMIN_HANDBOOK_HALL_LIST
          - ROLE_APP_ADMIN_HANDBOOK_HALL_VIEW
          - ROLE_APP_ADMIN_HANDBOOK_CITY_LIST
          - ROLE_APP_ADMIN_HANDBOOK_CITY_VIEW
          - ROLE_APP_ADMIN_CATALOG_LIST
          - ROLE_APP_ADMIN_CATALOG_VIEW

        ROLE_MANAGER:
          - ROLE_VIEWER
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_DELETE
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_CREATE
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_CREATE
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_DELETE
          - ROLE_APP_ADMIN_HANDBOOK_HALL_EDIT
          - ROLE_APP_ADMIN_HANDBOOK_HALL_DELETE
          - ROLE_APP_ADMIN_HANDBOOK_HALL_CREATE
          - ROLE_APP_ADMIN_HANDBOOK_CITY_EDIT
          - ROLE_APP_ADMIN_HANDBOOK_CITY_DELETE
          - ROLE_APP_ADMIN_HANDBOOK_CITY_CREATE
          - ROLE_APP_ADMIN_CATALOG_EDIT
          - ROLE_APP_ADMIN_CATALOG_DELETE
          - ROLE_APP_ADMIN_CATALOG_CREATE
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_EDIT
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_DELETE
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_CREATE
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_EXPORT
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_EDIT
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_DELETE
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_CREATE
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_EXPORT

        ROLE_VIEW:        [ROLE_USER, ROLE_VIEWER]
        ROLE_MODERATOR:   [ROLE_VIEW, ROLE_MANAGER]
        ROLE_ADMIN:       [ROLE_MODERATOR, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                default_target_path: /admin/dashboard
            logout:
                path:           /admin/logout
                target:         /admin/login
            anonymous:          true

        main:
           pattern: ^/
           form-login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
           logout: true
           anonymous: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_VIEW, ROLE_MODERATOR, ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
